# Parameter definitions for thorn MultiPatch

KEYWORD patch_system "Patch system"
{
  "none" :: "disable multi-patch systems"
  "Cartesian" :: ""
  "Cubed sphere" :: ""
  "Swirl" :: ""
  "Cake" :: "6 Thornburg-like spherical patches perfectly matched with a central cartesian cube patch. For details, see https://arxiv.org/abs/gr-qc/0512001 or the included Mathematica notebooks."
  "Two Cubes" :: "Two cartesian cubes that touch, sharing a face in the x direcion. Used for debugging."
} "none"

# Cartesian patch system

INT cartesian_ncells_i "Number of cells in i direction"
{
  0:* :: ""
} 10
INT cartesian_ncells_j "Number of cells in j direction"
{
  0:* :: ""
} 10
INT cartesian_ncells_k "Number of cells in k direction"
{
  0:* :: ""
} 10

REAL cartesian_xmin "xmin"
{
  *:* :: ""
} -1.0
REAL cartesian_ymin "ymin"
{
  *:* :: ""
} -1.0
REAL cartesian_zmin "zmin"
{
  *:* :: ""
} -1.0

REAL cartesian_xmax "xmax"
{
  *:* :: ""
} +1.0
REAL cartesian_ymax "ymax"
{
  *:* :: ""
} +1.0
REAL cartesian_zmax "zmax"
{
  *:* :: ""
} +1.0

# Cubed sphere patch system

REAL cubed_sphere_rmin "rmin"
{
  0:* :: ""
} +1.0

REAL cubed_sphere_rmax "rmax"
{
  0:* :: ""
} +3.0

# Swirl patch system

INT swirl_ncells_i "Number of cells in i direction"
{
  0:* :: ""
} 10
INT swirl_ncells_j "Number of cells in j direction"
{
  0:* :: ""
} 10
INT swirl_ncells_k "Number of cells in k direction"
{
  0:* :: ""
} 10

# Cake patch system

REAL cake_outer_boundary_radius "Radius where the outer boundaries of the cake will be placed."
{
  0:* :: "Positive"
} 10.0

REAL cake_inner_boundary_radius  "Half of the length of the side of the central cartesian cube"
{
  0:* :: "Positive"
} 1.0

# TODO: Review the actual necessity of these parameters. Erik says:
# "If we assume that grid lines are continuous across patch interfaces,
# then the various ncells parameters are not independent. angular_cells
# is determined by ncells_i etc., and iâ€™m not quite sure that the three
# ncells_[ijk] are actually independent."

INT cake_cartesian_ncells_i "Number of cells in the cartesian x direction"
{
  0:* :: "Positive"
} 10

INT cake_cartesian_ncells_j "Number of cells in the cartesian y direction"
{
  0:* :: "Positive"
} 10

INT cake_cartesian_ncells_k "Number of cells in the cartesian z direction"
{
  0:* :: "Positive"
} 10

INT cake_angular_cells "Number of cells in the angular direction"
{
  0:* :: "Positive"
} 10

INT cake_radial_cells "Number of cells in the radial direction" 
{
  0:* :: "Positive"
} 10

# Two Cubes patch system

REAL two_cubes_xmin "Two cubes xmin"
{
  *:* :: ""
} -1.0

REAL two_cubes_ymin "Two cubes ymin"
{
  *:* :: ""
} -1.0

REAL two_cubes_zmin "Two cubes zmin"
{
  *:* :: ""
} -1.0

REAL two_cubes_xmax "Two cubes xmax"
{
  *:* :: ""
} +1.0

REAL two_cubes_ymax "Two cubes ymax"
{
  *:* :: ""
} +1.0

REAL two_cubes_zmax "Two cubes zmax"
{
  *:* :: ""
} +1.0

REAL two_cubes_delta_y "Two cubes y displacement"
{
  *:* :: ""
} 0.0

INT two_cubes_ncells_left "Number of cells in left cube" 
{
  0:* :: "Positive"
} 10

INT two_cubes_ncells_right "Number of cells in the right cube" 
{
  0:* :: "Positive"
} 10

INT two_cubes_ncells_y "Number of cells in the y direction" 
{
  0:* :: "Positive"
} 10

INT two_cubes_ncells_z "Number of cells in the z direction" 
{
  0:* :: "Positive"
} 10

# Internal unit tests

CCTK_BOOLEAN run_tests "Wether or not to perform tests on the coordinate transformation routines"
{
} no

INT test_repetitions "How many times to repeat each test"
{
  1:* :: "Positive and greater or equal 1"
} 10
